{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/frontend/src/components/Layouts/AskQuestionBody.jsx\";\nimport React, { Component } from 'react';\nimport CKEditor from 'ckeditor4-react';\nimport axios from \"axios\";\nimport Config from \"../BaseUrl/Config\";\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport InvalidFeedBack from \"../Auth/InvalidFeedBack\";\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nconst hei_min = {\n  display: 'block',\n  width: '100%',\n  height: '44px',\n  padding: '6px 12px',\n  color: '#555',\n  backgroundColor: '#fff',\n  border: 'none !important',\n  borderRadius: '4px'\n};\n\nclass AskQuestionBody extends Component {\n  constructor() {\n    super();\n    this.error_msg = {\n      fontSize: 13,\n      color: 'chocolate'\n    };\n\n    this.handleChange = tags => {\n      this.setState({\n        tags\n      });\n    };\n\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeBody = this.onChangeBody.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onEditorChange = this.onEditorChange.bind(this);\n    this.state = {\n      errors: '',\n      title: '',\n      body: '',\n      tags: [],\n      successalart: false,\n      error_message: {}\n    };\n  }\n\n  onEditorChange(evt) {\n    this.setState({\n      body: evt.editor.getData()\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onChangeBody(changeEvent) {\n    this.setState({\n      body: changeEvent.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    this.setState({\n      error_message: {}\n    });\n    const obj = {\n      title: this.state.title,\n      body: this.state.body,\n      tags: this.state.tags\n    };\n    const token = window.localStorage.getItem('jwt-token');\n    const config = {\n      headers: {\n        'Authorization': `${token}`\n      }\n    };\n    axios.post(`${Config.apiUrl}/api/question`, obj, config).then(res => {\n      console.log(res);\n      this.setState({\n        title: '',\n        body: '',\n        tags: [],\n        successalart: true\n      }, () => {\n        window.setTimeout(() => {\n          this.setState({\n            successalart: false\n          });\n        }, 5000);\n      });\n    }).catch(error => {\n      if (error.response) {\n        this.setState({\n          error_message: error.response.data.errors\n        });\n      }\n    });\n  }\n\n  render() {\n    let className = '';\n\n    if (this.state.error_message.hasOwnProperty('title')) {\n      className += \"is-invalid\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"askqst_post_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          class: \"ask-h3\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-question-circle-o\",\n            \"aria-hidden\": \"true\",\n            style: {\n              fontSize: \"23px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 41\n          }, this), \" AskQuestion\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"post_article full pull-left\",\n          children: [this.state.successalart && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success\",\n            children: \"Question Submited successfully!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputEmail1\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control \" + className,\n                id: \"textInput\",\n                placeholder: \"Title here..\",\n                onChange: this.onChangeTitle,\n                value: this.state.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                class: \"form-text text-muted\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('title') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.title.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputPassword1\",\n                children: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CKEditor, {\n                onChange: this.onEditorChange,\n                data: this.state.body,\n                config: {\n                  autoParagraph: false,\n                  enterMode: 2,\n                  type: 'inline'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                class: \"form-text text-muted\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('body') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.body.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputPassword1\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TagsInput, {\n                style: hei_min,\n                type: \"text\",\n                placeholder: \"e.g. Python, Android\",\n                \"aria-label\": \"Search\",\n                value: this.state.tags,\n                onChange: this.handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                class: \"form-text text-muted\",\n                children: \"Add up to 5 tags to describe what your question is about.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('tags') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.tags.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              class: \"btn btn-success post-btn btn_secoend\",\n              onClick: this.onSubmit,\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AskQuestionBody;","map":{"version":3,"sources":["/app/frontend/src/components/Layouts/AskQuestionBody.jsx"],"names":["React","Component","CKEditor","axios","Config","TagsInput","InvalidFeedBack","Link","Redirect","withRouter","hei_min","display","width","height","padding","color","backgroundColor","border","borderRadius","AskQuestionBody","constructor","error_msg","fontSize","handleChange","tags","setState","onChangeTitle","bind","onChangeBody","onSubmit","onEditorChange","state","errors","title","body","successalart","error_message","evt","editor","getData","e","target","value","changeEvent","preventDefault","obj","token","window","localStorage","getItem","config","headers","post","apiUrl","then","res","console","log","setTimeout","catch","error","response","data","render","className","hasOwnProperty","msg","autoParagraph","enterMode","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CKEditor from 'ckeditor4-react';\nimport axios from \"axios\";\nimport Config from \"../BaseUrl/Config\";\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\nimport InvalidFeedBack from \"../Auth/InvalidFeedBack\";\n\nimport { Link, Redirect, withRouter} from 'react-router-dom';\n\nconst hei_min = {\n    display: 'block',\n    width: '100%',\n    height: '44px',\n    padding: '6px 12px',\n    color: '#555',\n    backgroundColor: '#fff',\n    border:'none !important',\n    borderRadius: '4px'\n}\n\nclass AskQuestionBody extends Component {\n    error_msg = {\n        fontSize: 13,\n        color: 'chocolate'\n      }\n\n    constructor() {\n        super()\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeBody = this.onChangeBody.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onEditorChange = this.onEditorChange.bind(this);\n\n        this.state = {\n            errors: '',\n            title: '',\n            body: '',\n            tags: [],\n            successalart:false,\n            error_message :{}\n        }\n    }\n    onEditorChange(evt) {\n        this.setState({\n            body: evt.editor.getData()\n        });\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n    onChangeBody(changeEvent) {\n        this.setState({\n            body: changeEvent.target.value\n        })\n    }\n\n    handleChange = (tags) => {\n\n        this.setState({ tags })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        this.setState({\n            error_message :{}\n        })\n        const obj = {\n            title: this.state.title,\n            body: this.state.body,\n            tags: this.state.tags\n        };\n\n        const token = window.localStorage.getItem('jwt-token')\n        const config = {\n            headers: {\n                'Authorization': `${token}`\n            }\n        }\n        axios.post(`${Config.apiUrl}/api/question`, obj, config)\n            .then((res) => {\n                console.log(res)\n              \n                this.setState({\n                    title: '',\n                    body:'',\n                    tags: [],\n                    successalart:true\n                },\n                ()=> {window.setTimeout(()=>{this.setState({successalart:false})},5000)})\n              \n            })\n            .catch(error =>{\n                if (error.response) { \n                    this.setState({\n                        error_message:  error.response.data.errors ,   \n                    })\n                  }      \n            }\n            );\n    }\n\n    render() {\n      \n        let className = ''\n        if (this.state.error_message.hasOwnProperty('title')) {\n            className += \"is-invalid\"\n        }\n       \n        return (\n            <React.Fragment>\n                {/* <!-- post start  --> */}\n                <div class=\"askqst_post_wrap\">\n                    <h3 class=\"ask-h3\" ><i class=\"fa fa-question-circle-o\" aria-hidden=\"true\" style={{ fontSize: \"23px\" }}></i> AskQuestion</h3>\n                    <div class=\"post_article full pull-left\">\n                        {this.state.successalart &&\n                        <div className=\"alert alert-success\">\n                            Question Submited successfully!!!\n                        </div>\n                        }\n                        <form>\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Title</label>\n                                <input className={\"form-control \" + className} id=\"textInput\" placeholder=\"Title here..\"\n                                    onChange={this.onChangeTitle}\n                                    value={this.state.title}\n                                />\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">\n                                    Be specific and imagine you’re asking a question to another person.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('title') && <InvalidFeedBack  message={this.state.error_message.title.msg} />}\n\n\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Body</label>\n                                <CKEditor\n                                    onChange={this.onEditorChange}\n                                    data={this.state.body}\n                                    config={{\n                                        autoParagraph: false,\n                                        enterMode: 2,\n                                        type: 'inline'\n                                    }}\n                                >\n                                </CKEditor>\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">\n                                    Be specific and imagine you’re asking a question to another person.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('body') && <InvalidFeedBack message={this.state.error_message.body.msg} />}\n                            <div class=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Tags</label>\n                                <br />\n                               \n                                <TagsInput  style={hei_min} type=\"text\" placeholder=\"e.g. Python, Android\" \n                                    aria-label=\"Search\"\n                                    value={this.state.tags}\n                                    onChange={this.handleChange}\n                                />\n                                <small id=\"emailHelp\" class=\"form-text text-muted\">\n                                    Add up to 5 tags to describe what your question is about.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('tags') && <InvalidFeedBack message={this.state.error_message.tags.msg} />}\n                            <button type=\"submit\" class=\"btn btn-success post-btn btn_secoend\" onClick={this.onSubmit}>Submit</button>\n                        </form>\n                    </div>\n                </div>\n                {/* <!-- post end  --> */}\n\n            </React.Fragment >\n        )\n    }\n\n}\nexport default AskQuestionBody"]},"metadata":{},"sourceType":"module"}