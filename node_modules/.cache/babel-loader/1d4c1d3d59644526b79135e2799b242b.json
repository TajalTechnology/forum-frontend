{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/frontend/src/components/Layouts/AdminEditQuesBody.jsx\";\nimport React, { Component } from 'react';\nimport CKEditor from 'ckeditor4-react';\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport Config from \"../BaseUrl/Config\";\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { Link } from 'react-router-dom';\nimport InvalidFeedBack from \"../Auth/InvalidFeedBack\";\nconst hei_min = {\n  display: 'block',\n  width: '100%',\n  height: '44px',\n  padding: '6px 12px',\n  color: '#555',\n  backgroundColor: '#fff',\n  border: 'none !important',\n  borderRadius: '4px'\n};\n\nclass AdminEditQuesBody extends Component {\n  constructor() {\n    super();\n    this.error_msg = {\n      fontSize: 13,\n      color: 'chocolate'\n    };\n\n    this.onChangeTag = tags => {\n      this.setState({\n        tags\n      });\n    };\n\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeTag = this.onChangeTag.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onEditorChange = this.onEditorChange.bind(this);\n    this.state = {\n      title: '',\n      body: null,\n      tags: [],\n      errorTitle: '',\n      errorBody: '',\n      errorTag: '',\n      successalart: false,\n      error_message: {}\n    };\n  }\n\n  componentDidMount() {\n    const token = window.localStorage.getItem('jwt-token');\n    let decoded = jwt_decode(token);\n    const config = {\n      headers: {\n        'Authorization': `${token}`\n      }\n    };\n    axios.get(`${Config.apiUrl}/api/pending-question/` + this.props.Id, config).then(response => {\n      this.setState({\n        title: response.data.question.title,\n        body: response.data.question.body,\n        tags: response.data.question.tags\n      });\n    }).catch(error => console.log(error));\n  }\n\n  onEditorChange(evt) {\n    this.setState({\n      body: evt.editor.getData()\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const token = window.localStorage.getItem('jwt-token');\n    const obj = {\n      title: this.state.title,\n      body: this.state.body,\n      tags: this.state.tags\n    };\n    const config = {\n      headers: {\n        'Authorization': `${token}`\n      }\n    };\n    axios.put(`${Config.apiUrl}/api/pending-question/` + this.props.Id, obj, config).then(res => {\n      console.log(res);\n      this.setState({\n        title: '',\n        body: '',\n        tags: [],\n        successalart: true,\n        error_message: ''\n      }, () => {\n        window.setTimeout(() => {\n          this.setState({\n            successalart: false\n          });\n        }, 2000);\n      });\n    }).catch(error => {\n      if (error.response) {\n        // console.log(error.response.data.errors.tags.msg);\n        this.setState({\n          error_message: error.response.data.errors\n        });\n      }\n    });\n  }\n\n  render() {\n    let className = '';\n\n    if (this.state.error_message.hasOwnProperty('title')) {\n      className += \"is-invalid\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"askqst_post_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"header2\",\n          children: [/*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-question-circle-o\",\n            \"aria-hidden\": \"true\",\n            style: {\n              fontSize: \"23px\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 46\n          }, this), \" Edit Question \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_article full pull-left\",\n          children: [this.state.successalart && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success\",\n            children: \"Question Edit successfully!!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputEmail1\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control \" + className,\n                id: \"textInput\",\n                placeholder: \"title here\",\n                onChange: this.onChangeTitle,\n                value: this.state.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"form-text text-muted\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('title') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.title.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputPassword1\",\n                children: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), this.state.body != null && /*#__PURE__*/_jsxDEV(CKEditor, {\n                onChange: this.onEditorChange,\n                value: this.state.body,\n                data: this.state.body,\n                config: {\n                  autoParagraph: false,\n                  enterMode: 2,\n                  type: 'inline'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"form-text text-muted\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('body') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.body.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputPassword1\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TagsInput, {\n                className: \"form-control \",\n                style: hei_min,\n                type: \"text\",\n                placeholder: \"e.g. Python, Android\",\n                \"aria-label\": \"Search\",\n                value: this.state.tags,\n                onChange: this.onChangeTag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"form-text text-muted\",\n                children: \"Add up to 5 tags to describe what your question is about.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('tags') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.tags.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/pending_question\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success post-btn btn_secoend\",\n                style: {\n                  marginRight: \"5px\"\n                },\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success post-btn btn_secoend\",\n              onClick: this.onSubmit,\n              children: \"Edit Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default AdminEditQuesBody;","map":{"version":3,"sources":["/app/frontend/src/components/Layouts/AdminEditQuesBody.jsx"],"names":["React","Component","CKEditor","axios","jwt_decode","Config","TagsInput","Link","InvalidFeedBack","hei_min","display","width","height","padding","color","backgroundColor","border","borderRadius","AdminEditQuesBody","constructor","error_msg","fontSize","onChangeTag","tags","setState","onChangeTitle","bind","onSubmit","onEditorChange","state","title","body","errorTitle","errorBody","errorTag","successalart","error_message","componentDidMount","token","window","localStorage","getItem","decoded","config","headers","get","apiUrl","props","Id","then","response","data","question","catch","error","console","log","evt","editor","getData","e","target","value","preventDefault","obj","put","res","setTimeout","errors","render","className","hasOwnProperty","msg","autoParagraph","enterMode","type","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CKEditor from 'ckeditor4-react';\nimport axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\nimport Config from \"../BaseUrl/Config\";\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\nimport { Link } from 'react-router-dom';\nimport InvalidFeedBack from \"../Auth/InvalidFeedBack\";\n\nconst hei_min = {\n    display: 'block',\n    width: '100%',\n    height: '44px',\n    padding: '6px 12px',\n    color: '#555',\n    backgroundColor: '#fff',\n    border:'none !important',\n    borderRadius: '4px'\n}\n\nclass AdminEditQuesBody extends Component {\n    error_msg = {\n        fontSize: 13,\n        color: 'chocolate'\n    }\n\n    constructor() {\n        super()\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeTag = this.onChangeTag.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onEditorChange = this.onEditorChange.bind(this);\n\n        this.state = {\n\n            title: '',\n            body: null,\n            tags: [],\n            errorTitle: '',\n            errorBody: '',\n            errorTag: '',\n            successalart: false,\n            error_message: {}\n        }\n    }\n\n    componentDidMount() {\n        const token = window.localStorage.getItem('jwt-token')\n        let decoded = jwt_decode(token);\n        const config = {\n            headers: {\n                'Authorization': `${token}`\n            }\n        }\n        axios.get(`${Config.apiUrl}/api/pending-question/` + this.props.Id, config)\n            .then(response => {\n                this.setState({\n                    title: response.data.question.title,\n                    body: response.data.question.body,\n                    tags: response.data.question.tags\n\n                });\n            })\n            .catch((error) => console.log(error));\n\n    }\n\n    onEditorChange(evt) {\n        this.setState({\n            body: evt.editor.getData()\n        });\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeTag = (tags) => {\n\n        this.setState({ tags })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const token = window.localStorage.getItem('jwt-token')\n        const obj = {\n            title: this.state.title,\n            body: this.state.body,\n            tags: this.state.tags\n        }\n        const config = {\n            headers: {\n                'Authorization': `${token}`\n            }\n        }\n        axios.put(`${Config.apiUrl}/api/pending-question/` + this.props.Id, obj, config)\n            .then((res) => {\n                console.log(res)\n                this.setState({\n                    title: '',\n                    body: '',\n                    tags: [],\n                    successalart: true,\n                    error_message: ''\n                },\n                    () => {\n                        window.setTimeout(() => { this.setState({ successalart: false }) }, 2000)\n                    })\n            })\n            .catch(error => {\n                if (error.response) {\n                    // console.log(error.response.data.errors.tags.msg);\n                    this.setState({\n                        error_message: error.response.data.errors,\n                    })\n                }\n            }\n            );\n\n\n    }\n\n    render() {\n        let className = ''\n        if (this.state.error_message.hasOwnProperty('title')) {\n            className += \"is-invalid\"\n        }\n        return (\n            <React.Fragment>\n                {/* <!-- post start  --> */}\n                <div className=\"askqst_post_wrap\">\n                    <h3 className=\"header2\" ><i className=\"fa fa-question-circle-o\" aria-hidden=\"true\" style={{ fontSize: \"23px\" }}></i> Edit Question </h3>\n                    <div className=\"post_article full pull-left\">\n                        {this.state.successalart &&\n                            <div className=\"alert alert-success\">\n                                Question Edit successfully!!!\n                        </div>\n                        }\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Title</label>\n                                <input className={\"form-control \" + className} id=\"textInput\" placeholder=\"title here\"\n                                    onChange={this.onChangeTitle}\n                                    value={this.state.title}\n                                />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                    Be specific and imagine you’re asking a question to another person.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('title') && <InvalidFeedBack message={this.state.error_message.title.msg} />}\n\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Body</label>\n                                {this.state.body != null &&\n                                    <CKEditor\n                                        onChange={this.onEditorChange}\n                                        value={this.state.body}\n                                        data={this.state.body}\n                                        config={{\n                                            autoParagraph: false,\n                                            enterMode: 2,\n                                            type: 'inline'\n                                        }}\n                                    >\n                                    </CKEditor>\n                                }\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                    Be specific and imagine you’re asking a question to another person.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('body') && <InvalidFeedBack message={this.state.error_message.body.msg} />}\n\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Tags</label>\n                                <br />\n                                <TagsInput className=\"form-control \" style={hei_min} type=\"text\" placeholder=\"e.g. Python, Android\"\n                                    aria-label=\"Search\"\n                                    value={this.state.tags}\n                                    onChange={this.onChangeTag}\n                                />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                    Add up to 5 tags to describe what your question is about.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('tags') && <InvalidFeedBack message={this.state.error_message.tags.msg} />}\n                            <Link to=\"/pending_question\">\n                                <button type=\"submit\" className=\"btn btn-success post-btn btn_secoend\" style={{ marginRight: \"5px\" }}>Back</button>\n                            </Link>\n                            <button type=\"submit\" className=\"btn btn-success post-btn btn_secoend\" onClick={this.onSubmit}>Edit Question</button>\n                            \n                        </form>\n                    </div>\n                </div>\n                {/* <!-- post end  --> */}\n\n            </React.Fragment >\n        )\n    }\n\n}\nexport default AdminEditQuesBody"]},"metadata":{},"sourceType":"module"}