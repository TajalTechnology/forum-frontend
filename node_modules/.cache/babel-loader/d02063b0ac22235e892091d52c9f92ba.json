{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/frontend/src/components/Layouts/Comment.jsx\";\nimport React, { Component } from 'react';\nimport NewComment from \"./NewComment\";\nimport axios from 'axios';\nimport Config from \"../BaseUrl/Config\";\nimport jwt_decode from \"jwt-decode\";\nimport moment from 'moment';\n\nclass Comment extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      editComment: false,\n      commentId: '',\n      currentUserId: ''\n    };\n  }\n\n  componentDidMount() {\n    if (window.localStorage.getItem('jwt-token')) {\n      this.decodedToken();\n    }\n  }\n\n  delete(deleteUrl) {\n    const token = window.localStorage.getItem('jwt-token');\n    axios.delete(deleteUrl, {\n      headers: {\n        'Authorization': `${token}`\n      }\n    }).then(res => {\n      console.log(res);\n      this.props.manageState();\n    });\n  }\n\n  decodedToken() {\n    const token = window.localStorage.getItem('jwt-token');\n    let decoded = jwt_decode(token);\n    this.setState({\n      currentUserId: decoded.users.id\n    });\n  }\n\n  visibleFalse(data) {\n    this.setState({\n      visible: data\n    });\n  }\n\n  render() {\n    moment('timestamp').format('MMMM Do YYYY');\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginLeft: \"60px\"\n        },\n        children: [this.props.Comments && this.props.Comments.map((comment, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"comment_div\",\n            children: [comment.body, \" - \", /*#__PURE__*/_jsxDEV(\"sapn\", {\n              class: \"name-col\",\n              children: comment.User.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 50\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              class: \"date-col\",\n              children: [\" \", moment(comment.createdAt).format('MMMM Do,  YYYY  ')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 33\n            }, this), this.state.currentUserId === comment.UserId && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#textInput\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"edit_ic\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-edit\",\n                  style: {\n                    color: \"lightgray\",\n                    marginLeft: \"4px\"\n                  },\n                  onClick: () => {\n                    this.setState({\n                      visible: true,\n                      editComment: true,\n                      commentId: comment.id\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 80\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 58\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 37\n            }, this), this.state.currentUserId === comment.UserId && /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                class: \"edit_ic\",\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-trash\",\n                  style: {\n                    color: \"lightgray\",\n                    marginLeft: \"4px\"\n                  },\n                  onClick: () => this.delete(`${Config.apiUrl}/api/comment/` + comment.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 72\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), this.state.visible === true && /*#__PURE__*/_jsxDEV(NewComment, {\n          editFlag: this.state.editComment,\n          Id: this.props.Id,\n          commentId: this.state.commentId,\n          type: this.props.Type,\n          manageState: () => {\n            this.props.manageState();\n          },\n          visibleFalse: value => {\n            this.visibleFalse(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 25\n        }, this), this.state.visible === false && /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#textInput\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            class: \"date-col\",\n            onClick: () => {\n              this.setState({\n                visible: true\n              });\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-comment\",\n              \"aria-hidden\": \"true\",\n              style: {\n                color: \"lightgray\",\n                marginRight: \"2px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this), \"add comment\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/app/frontend/src/components/Layouts/Comment.jsx"],"names":["React","Component","NewComment","axios","Config","jwt_decode","moment","Comment","constructor","props","state","visible","editComment","commentId","currentUserId","componentDidMount","window","localStorage","getItem","decodedToken","delete","deleteUrl","token","headers","then","res","console","log","manageState","decoded","setState","users","id","visibleFalse","data","render","format","marginLeft","Comments","map","comment","index","body","User","userName","createdAt","UserId","color","apiUrl","Id","Type","value","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport NewComment from \"./NewComment\"\nimport axios from 'axios';\nimport Config from \"../BaseUrl/Config\";\nimport jwt_decode from \"jwt-decode\";\nimport moment from 'moment';\n\nclass Comment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            visible: false,\n            editComment: false,\n            commentId: '',\n            currentUserId: ''\n\n        }\n    }\n\n    componentDidMount() {\n\n        if (window.localStorage.getItem('jwt-token')) {\n\t\t\tthis.decodedToken()\n\t\t}\n    }\n\n    delete(deleteUrl) {\n        const token = window.localStorage.getItem('jwt-token')\n        axios.delete(deleteUrl, {\n            headers: {\n\n                'Authorization': `${token}`\n            }\n        },\n        )\n            .then((res) => {\n                console.log(res)\n                this.props.manageState()\n            })\n    }\n\n    decodedToken() {\n        const token = window.localStorage.getItem('jwt-token')\n        let decoded = jwt_decode(token);\n        this.setState({\n            currentUserId: decoded.users.id\n        })\n    }\n    visibleFalse(data) {\n        this.setState({\n            visible: data\n        })\n    }\n\n    render() {\n        moment('timestamp').format('MMMM Do YYYY')\n        return (\n            <React.Fragment>\n                <div style={{ marginLeft: \"60px\" }}>\n                    {this.props.Comments && this.props.Comments.map((comment, index) => (\n                        <div>\n                            <hr />\n                            <p class=\"comment_div\">\n                                {comment.body} - <sapn class=\"name-col\">{comment.User.userName}</sapn>\n                                <span class=\"date-col\"> {moment(comment.createdAt).format('MMMM Do,  YYYY  ')}</span>\n                                {this.state.currentUserId === comment.UserId &&\n                                    <a href=\"#textInput\"><span class=\"edit_ic\"><i class=\"fa fa-edit\" style={{ color: \"lightgray\", marginLeft: \"4px\" }}\n                                        onClick={\n                                            () => {\n                                                this.setState({\n                                                    visible: true,\n                                                    editComment: true,\n                                                    commentId: comment.id\n                                                })\n                                            }\n                                        }>\n                                    </i></span>\n                                    </a>\n                                }\n                                {this.state.currentUserId === comment.UserId &&\n                                    <a href=\"#\"><span class=\"edit_ic\" ><i class=\"fa fa-trash\" style={{ color: \"lightgray\", marginLeft: \"4px\" }}\n                                        onClick={() => this.delete(`${Config.apiUrl}/api/comment/` + comment.id)}\n                                    ></i></span></a>\n                                }\n                            </p>\n                        </div>\n                    ))}\n                    <hr />\n                    {this.state.visible === true &&\n                        <NewComment\n                            editFlag={this.state.editComment}\n                            Id={this.props.Id}\n                            commentId={this.state.commentId}\n                            type={this.props.Type}\n                            manageState={() => {\n                                this.props.manageState()\n                            }}\n                            visibleFalse={(value) => {\n                                this.visibleFalse(value)\n                            }}\n                        />\n                    }\n                    {this.state.visible === false &&\n                        <a href=\"#textInput\">\n                            <p class=\"date-col\"\n                                onClick={\n                                    () => {\n                                        this.setState({\n                                            visible: true\n                                        })\n                                    }\n                                } >\n                                <i class=\"fa fa-comment\" aria-hidden=\"true\" style={{ color: \"lightgray\", marginRight: \"2px\" }}></i>add comment\n                        </p></a>}\n                </div>\n            </React.Fragment>\n\n        )\n    }\n\n}\nexport default Comment"]},"metadata":{},"sourceType":"module"}