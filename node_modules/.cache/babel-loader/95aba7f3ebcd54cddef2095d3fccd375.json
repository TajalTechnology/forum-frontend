{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/frontend/src/components/Layouts/NewComment.jsx\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport Config from \"../BaseUrl/Config\";\n\nclass NewComment extends Component {\n  constructor(props) {\n    super(props);\n    this.error_msg = {\n      fontSize: 13,\n      color: 'chocolate'\n    };\n    this.onChangeBody = this.onChangeBody.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      body: '',\n      errors: ''\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.editFlag === true) {\n      this.editComment(this.props.commentId);\n    } else {\n      console.log(\"false\");\n    }\n  }\n\n  editComment(Id) {\n    axios.get(`${Config.apiUrl}/api/comment/` + Id).then(response => {\n      this.setState({\n        body: response.data.details.comment.body // editedId: Id,\n        // edit: true,\n        // inputeControl: true\n\n      });\n    }).catch(error => console.log(error));\n  }\n\n  onChangeBody(e) {\n    this.setState({\n      body: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const obj = {\n      body: this.state.body,\n      commentableId: this.props.Id,\n      commentableType: this.props.type\n    };\n    const token = window.localStorage.getItem('jwt-token');\n    const config = {\n      headers: {\n        'Authorization': `${token}`\n      }\n    };\n\n    if (this.props.editFlag === false) {\n      axios.post(`${Config.apiUrl}/api/comment`, obj, config).then(res => {\n        console.log(res);\n        this.setState({\n          body: ''\n        });\n        this.props.manageState();\n        this.props.visibleFalse(false);\n      }).catch(error => {\n        if (error.response) {\n          console.log(error.response.data.errors.body.msg);\n          this.setState({\n            errors: error.response.data.errors.body.msg\n          });\n        }\n      });\n    } else {\n      axios.put(`${Config.apiUrl}/api/comment/` + this.props.commentId, obj, config).then(res => {\n        console.log(res);\n        this.setState({\n          body: ''\n        });\n        this.props.manageState();\n        this.props.visibleFalse(false);\n      }).catch(error => {\n        if (error.response) {\n          console.log(error.response.data.errors.body.msg);\n          this.setState({\n            errors: error.response.data.errors.body.msg\n          });\n        }\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          class: \" textInput form-control\",\n          id: \"textInput\",\n          name: \"story\",\n          rows: \"2\",\n          cols: \"84\",\n          style: {\n            padding: \"10px\"\n          },\n          placeholder: \"write your comment here...\",\n          value: this.state.body,\n          onChange: this.onChangeBody\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error\",\n            style: this.error_msg,\n            children: this.state.errors\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          class: \"btn-sm btn-success post-btn btn_secoend\",\n          onClick: this.onSubmit,\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NewComment;","map":{"version":3,"sources":["/app/frontend/src/components/Layouts/NewComment.jsx"],"names":["React","Component","axios","Config","NewComment","constructor","props","error_msg","fontSize","color","onChangeBody","bind","onSubmit","state","body","errors","componentDidMount","editFlag","editComment","commentId","console","log","Id","get","apiUrl","then","response","setState","data","details","comment","catch","error","e","target","value","preventDefault","obj","commentableId","commentableType","type","token","window","localStorage","getItem","config","headers","post","res","manageState","visibleFalse","msg","put","render","padding"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport Config from \"../BaseUrl/Config\";\n\nclass NewComment extends Component {\n    error_msg = {\n        fontSize: 13,\n        color: 'chocolate'\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeBody = this.onChangeBody.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.state = {\n            body: '',\n            errors: ''\n\n        }\n    }\n\n\n    componentDidMount(){\n\n        if(this.props.editFlag === true){\n            this.editComment(this.props.commentId)\n        }\n        else{\n            console.log(\"false\")\n        }\n    }\n\n    editComment(Id) {\n        axios.get(`${Config.apiUrl}/api/comment/` + Id)\n            .then(response => {\n                this.setState({\n                    body: response.data.details.comment.body,\n                    // editedId: Id,\n                    // edit: true,\n                    // inputeControl: true\n                });\n            })\n            .catch((error) => console.log(error));\n    }\n\n\n    onChangeBody(e) {\n        this.setState({\n            body: e.target.value\n        });\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        const obj = {\n            body: this.state.body,\n            commentableId: this.props.Id,\n            commentableType: this.props.type\n        };\n        const token = window.localStorage.getItem('jwt-token')\n        const config = {\n            headers: {\n                'Authorization': `${token}`\n            }\n        }\n\n        if (this.props.editFlag === false) {\n            axios.post(`${Config.apiUrl}/api/comment`, obj, config)\n\n                .then((res) => {\n                    console.log(res)\n                    this.setState({\n                        body: ''\n                    })\n                    this.props.manageState()\n                    this.props.visibleFalse(false)\n                })\n                .catch(error =>{\n                    if (error.response) {\n                        console.log(error.response.data.errors.body.msg);\n                        this.setState({\n                            errors:error.response.data.errors.body.msg\n                        })\n                      }      \n                }\n                );\n        }\n        else{\n            axios.put(`${Config.apiUrl}/api/comment/` + this.props.commentId, obj, config)\n                .then((res) => {\n                    console.log(res)\n                    this.setState({\n                        body: ''\n                    })\n                    this.props.manageState()\n                    this.props.visibleFalse(false)\n                })\n                .catch(error =>{\n                    if (error.response) {\n                        console.log(error.response.data.errors.body.msg);\n                        this.setState({\n                            errors:error.response.data.errors.body.msg\n                        })\n                      }      \n                }\n                );\n        }\n      \n    }\n    render() {\n        return (\n            <div>\n                <form>\n                    <textarea class=\" textInput form-control\" id=\"textInput\" name=\"story\" rows=\"2\" cols=\"84\"\n                        style={{ padding: \"10px\" }} placeholder=\"write your comment here...\"\n                        value={this.state.body}\n                        onChange={this.onChangeBody}\n                    ></textarea>\n                     <div>\n                    <span className='error' style={this.error_msg}>{this.state.errors}</span>\n                    </div>\n                    <button type=\"submit\" class=\"btn-sm btn-success post-btn btn_secoend\" onClick={this.onSubmit} >Add</button>\n                    <br />\n                </form>\n            </div>\n        )\n    }\n\n}\nexport default NewComment"]},"metadata":{},"sourceType":"module"}