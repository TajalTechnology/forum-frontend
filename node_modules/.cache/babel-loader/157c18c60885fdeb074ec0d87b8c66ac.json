{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/app/frontend/src/components/Layouts/EditQuestionBody.jsx\";\nimport React, { Component } from 'react';\nimport CKEditor from 'ckeditor4-react';\nimport axios from \"axios\";\nimport Config from \"../BaseUrl/Config\";\nimport jwt_decode from \"jwt-decode\";\nimport TagsInput from 'react-tagsinput';\nimport 'react-tagsinput/react-tagsinput.css';\nimport { Link } from 'react-router-dom';\nimport InvalidFeedBack from \"../Auth/InvalidFeedBack\";\nconst hei_min = {\n  display: 'block',\n  width: '100%',\n  height: '44px',\n  padding: '6px 12px',\n  color: '#555',\n  backgroundColor: '#fff',\n  border: 'none !important',\n  borderRadius: '4px'\n};\n\nclass EditQuestionBody extends Component {\n  constructor() {\n    super();\n    this.error_msg = {\n      fontSize: 13,\n      color: 'red'\n    };\n\n    this.onChangeTag = tags => {\n      this.setState({\n        tags\n      });\n    };\n\n    this.onChangeTitle = this.onChangeTitle.bind(this);\n    this.onChangeTag = this.onChangeTag.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onEditorChange = this.onEditorChange.bind(this);\n    this.state = {\n      title: '',\n      body: null,\n      tags: [],\n      error_message: {}\n    };\n  }\n\n  componentDidMount() {\n    const token = window.localStorage.getItem('jwt-token');\n    let decoded = jwt_decode(token);\n    axios.get(`${Config.apiUrl}/api/question/` + this.props.id).then(response => {\n      this.setState({\n        title: response.data.question.title,\n        body: response.data.question.body,\n        tags: response.data.question.tags\n      });\n    }).catch(error => console.log(error));\n  }\n\n  onEditorChange(evt) {\n    this.setState({\n      body: evt.editor.getData()\n    });\n  }\n\n  onChangeTitle(e) {\n    this.setState({\n      title: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    const token = window.localStorage.getItem('jwt-token');\n    const obj = {\n      title: this.state.title,\n      body: this.state.body,\n      tags: this.state.tags\n    };\n    const config = {\n      headers: {\n        'Authorization': `${token}`\n      }\n    };\n    axios.put(`${Config.apiUrl}/api/question/` + this.props.id, obj, config).then(res => {\n      console.log(res);\n      this.props.manageState();\n    }).catch(error => {\n      if (error.response) {\n        this.setState({\n          error_message: error.response.data.errors\n        });\n      }\n    });\n  }\n\n  render() {\n    let className = '';\n\n    if (this.state.error_message.hasOwnProperty('title')) {\n      className += \"is-invalid\";\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"askqst_post_wrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"ask-h3\",\n          children: \"Edit Question\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"post_article full pull-left\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputEmail1\",\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"form-control \" + className,\n                id: \"textInput\",\n                placeholder: \"title here\",\n                value: this.state.title,\n                onChange: this.onChangeTitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"form-text text-muted\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('title') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.title.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 82\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputPassword1\",\n                children: \"Body\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 33\n              }, this), this.state.body != null && /*#__PURE__*/_jsxDEV(CKEditor, {\n                onChange: this.onEditorChange,\n                value: this.state.body,\n                data: this.state.body,\n                config: {\n                  autoParagraph: false,\n                  enterMode: 2,\n                  type: 'inline'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"form-text text-muted\",\n                children: \"Be specific and imagine you\\u2019re asking a question to another person.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('body') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.body.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                for: \"exampleInputPassword1\",\n                children: \"Tags\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TagsInput, {\n                className: \"form-control \",\n                style: hei_min,\n                type: \"text\",\n                placeholder: \"e.g. Python, Android\",\n                \"aria-label\": \"Search\",\n                value: this.state.tags,\n                onChange: this.onChangeTag\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                id: \"emailHelp\",\n                className: \"form-text text-muted\",\n                children: \"Add up to 5 tags to describe what your question is about.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), this.state.error_message.hasOwnProperty('tags') && /*#__PURE__*/_jsxDEV(InvalidFeedBack, {\n              message: this.state.error_message.tags.msg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 81\n            }, this), /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/details/\" + this.props.id,\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                className: \"btn btn-success post-btn addButton\",\n                children: \"Back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-success post-btn addButton\",\n              onClick: this.onSubmit,\n              children: \"Edit Question\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default EditQuestionBody;","map":{"version":3,"sources":["/app/frontend/src/components/Layouts/EditQuestionBody.jsx"],"names":["React","Component","CKEditor","axios","Config","jwt_decode","TagsInput","Link","InvalidFeedBack","hei_min","display","width","height","padding","color","backgroundColor","border","borderRadius","EditQuestionBody","constructor","error_msg","fontSize","onChangeTag","tags","setState","onChangeTitle","bind","onSubmit","onEditorChange","state","title","body","error_message","componentDidMount","token","window","localStorage","getItem","decoded","get","apiUrl","props","id","then","response","data","question","catch","error","console","log","evt","editor","getData","e","target","value","preventDefault","obj","config","headers","put","res","manageState","errors","render","className","hasOwnProperty","msg","autoParagraph","enterMode","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport CKEditor from 'ckeditor4-react';\nimport axios from \"axios\";\nimport Config from \"../BaseUrl/Config\";\nimport jwt_decode from \"jwt-decode\";\nimport TagsInput from 'react-tagsinput'\nimport 'react-tagsinput/react-tagsinput.css'\nimport { Link } from 'react-router-dom';\nimport InvalidFeedBack from \"../Auth/InvalidFeedBack\";\n\nconst hei_min = {\n    display: 'block',\n    width: '100%',\n    height: '44px',\n    padding: '6px 12px',\n    color: '#555',\n    backgroundColor: '#fff',\n    border:'none !important',\n    borderRadius: '4px'\n}\n\nclass EditQuestionBody extends Component {\n    error_msg = {\n        fontSize: 13,\n        color: 'red'\n      }\n    constructor() {\n        super()\n        this.onChangeTitle = this.onChangeTitle.bind(this);\n        this.onChangeTag = this.onChangeTag.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.onEditorChange = this.onEditorChange.bind(this);\n\n        this.state = {\n            \n            title: '',\n            body: null,\n            tags: [],\n            error_message :{}\n            \n        }\n    }\n\n\n    componentDidMount() {\n        const token = window.localStorage.getItem('jwt-token')\n        let decoded = jwt_decode(token);\n        axios.get(`${Config.apiUrl}/api/question/` + this.props.id)\n            .then(response => {\n                this.setState({\n                    title: response.data.question.title,\n                    body: response.data.question.body,\n                    tags: response.data.question.tags\n\n                });\n            })\n            .catch((error) => console.log(error));\n\n    }\n\n    onEditorChange(evt) {\n        this.setState({\n            body: evt.editor.getData()\n        });\n    }\n\n    onChangeTitle(e) {\n        this.setState({\n            title: e.target.value\n        });\n    }\n\n    onChangeTag = (tags) => {\n\n        this.setState({ tags })\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        const token = window.localStorage.getItem('jwt-token')\n        const obj = {\n            title: this.state.title,\n            body: this.state.body,\n            tags: this.state.tags\n        }\n        const config = {\n            headers: {\n                'Authorization': `${token}`\n            }\n        }\n        axios.put(`${Config.apiUrl}/api/question/` + this.props.id, obj, config)\n            .then((res) => {\n                console.log(res)\n                this.props.manageState()\n            })\n            .catch(error =>{\n                if (error.response) {\n                    this.setState({\n                        error_message:  error.response.data.errors ,   \n                    })\n                  \n                  }      \n            }\n            );\n\n\n    }\n\n    render() {\n        let className = ''\n        if (this.state.error_message.hasOwnProperty('title')) {\n            className += \"is-invalid\"\n        }\n        return (\n            <React.Fragment>\n                {/* <!-- post start  --> */}\n                <div className=\"askqst_post_wrap\">\n                    <h3 className=\"ask-h3\" >\n                        \n                            Edit Question</h3>\n                    <div className=\"post_article full pull-left\">\n                        <form onSubmit={this.onSubmit}>\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputEmail1\">Title</label>\n                                <input className={\"form-control \" + className} id=\"textInput\" placeholder=\"title here\"\n                                   value={this.state.title}\n                                   onChange={this.onChangeTitle}\n                                />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                    Be specific and imagine you’re asking a question to another person.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('title') && <InvalidFeedBack  message={this.state.error_message.title.msg} />}\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Body</label>\n                                {this.state.body != null &&\n                                <CKEditor\n                                    onChange={this.onEditorChange}\n                                    value={this.state.body}\n                                    data={this.state.body}\n                                    config={{\n                                        autoParagraph: false,\n                                        enterMode: 2,\n                                        type: 'inline'\n                                    }}\n                                >\n                                </CKEditor>\n                                  }\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                    Be specific and imagine you’re asking a question to another person.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('body') && <InvalidFeedBack message={this.state.error_message.body.msg} />}\n                            <div className=\"form-group\">\n                                <label for=\"exampleInputPassword1\">Tags</label>\n                                <br />\n                                <TagsInput className=\"form-control \" style={hei_min} type=\"text\" placeholder=\"e.g. Python, Android\"\n                                    aria-label=\"Search\"\n                                    value={this.state.tags}\n                                    onChange={this.onChangeTag}\n                                />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">\n                                    Add up to 5 tags to describe what your question is about.</small>\n                            </div>\n                            {this.state.error_message.hasOwnProperty('tags') && <InvalidFeedBack message={this.state.error_message.tags.msg} />}\n                            <Link to= {\"/details/\"+ this.props.id}>\n                            <button type=\"submit\" className=\"btn btn-success post-btn addButton\" >Back</button>\n                        </Link>\n                            <button type=\"submit\" className=\"btn btn-success post-btn addButton\" onClick={this.onSubmit}>Edit Question</button>\n                        </form>\n                    </div>\n                </div>\n                {/* <!-- post end  --> */}\n\n            </React.Fragment >\n        )\n    }\n\n}\nexport default EditQuestionBody"]},"metadata":{},"sourceType":"module"}